ext {

// Android
    minSdkVersion = 14
    targetSdkVersion = 28
    versionCode = 1
    versionName = "1.0"
    androidCompileSdkVersion = 28
    testInstrumentationRunner = "com.appsimobile.weekly.MockJUnitRunner"

// Libraries
    ankoVersion = '0.10.4'
    retrofit2Version = '2.4.0'
    butterknifeVersion = '8.8.1'
    glideVersion = '4.9.0'
    supportVersion = '1.0.0-rc02'
    daggerVersion = '2.16'
    espressoVersion = '3.1.0-alpha1'
    powermockVersion = '1.7.4'
    lifecycleVersion = '2.0.0'
    rxJavaVersion = '2.2.2'
    rxAndroidVersion = '2.1.0'
    reactiveStreamsVersion = '1.1.0'
    roomVersion = '2.1.0-alpha01'
    pagingVersion = '2.0.0'
    javaxInjectVersion = '1'
    okhttpLoggingVersion = '3.11.0'
    junitVersion = '4.12'
    mockitoVersion = '2.8.47'
    realmFieldNamesHelperVersion = '1.1.1'
    gsonVersion = '2.8.5'
    constraintLayoutVersion = '1.1.2'
    supportTest = '1.1.0-alpha1'
    robolectricVersion = '3.8'
    mockitoCoreVersion = '2.21.0'
    navigationVersion = '1.0.0-alpha06'
    paginateVersion = '0.5.1'
    coordinatorlayoutVersion = '1.0.0'
    mapVersion = '17.0.0'
    busVersion = '3.1.1'


    // App
    appDependencies = [
            material              : "com.google.android.material:material:$supportVersion",
            recyclerview          : "androidx.recyclerview:recyclerview:$supportVersion",
            cardview              : "androidx.cardview:cardview:$supportVersion",
            annotation            : "androidx.annotation:annotation:$supportVersion",
            dagger                : "com.google.dagger:dagger:$daggerVersion",
            daggerAndroid         : "com.google.dagger:dagger-android:$daggerVersion",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:$daggerVersion",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            constraintLayout      : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            glide                 : "com.github.bumptech.glide:glide:$glideVersion",
            glideAnnotation       : "com.github.bumptech.glide:compiler:$glideVersion",
            navigationFragment    : "android.arch.navigation:navigation-fragment-ktx:$navigationVersion",
            navigationUi          : "android.arch.navigation:navigation-ui-ktx:$navigationVersion",
            coordinatorlayout     : "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayoutVersion",
            reactiveStreams       : "android.arch.lifecycle:reactivestreams:$reactiveStreamsVersion",
            map                   : "com.google.android.gms:play-services-maps:$mapVersion",
            appCompat             : "androidx.appcompat:appcompat:$supportVersion",
            lifecycleExtensions   : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
            lifecycleCommon       : "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion",
            pagingRuntime         : "androidx.paging:paging-runtime:$pagingVersion",
            pagingRxJava          : "androidx.paging:paging-rxjava2:$pagingVersion",


    ]

    // Data
    dataDependencies = [
            javaxInject           : "javax.inject:javax.inject:$javaxInjectVersion",
            retrofit              : "com.squareup.retrofit2:retrofit:$retrofit2Version",
            retrofitRxJava2Adapter: "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version",
            retrofitGsonConverter : "com.squareup.retrofit2:converter-gson:$retrofit2Version",
            okhttpLogging         : "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingVersion",
            bus                   : "org.greenrobot:eventbus:$busVersion",
            rxJava                : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
            rxAndroid             : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
    ]

    appTestDependencies = [
            junit                 : "junit:junit:$junitVersion",
            mockito               : "org.mockito:mockito-core:$mockitoVersion",
            testRunner            : "androidx.test:runner:$supportTest",
            testRules             : "androidx.test:runner:$supportTest",
            mockitoCore           : "org.mockito:mockito-core:$mockitoCoreVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            powermockModuleJunit4 : "org.powermock:powermock-module-junit4:$powermockVersion",
            powermockApiMockito   : "org.powermock:powermock-api-mockito2:$powermockVersion",
            supportAnnotations    : "androidx.annotation:annotation:$supportVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",

    ]

}